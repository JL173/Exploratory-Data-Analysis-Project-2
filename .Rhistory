source("~/.active-rstudio-document", echo=TRUE)
today()
source("~/.active-rstudio-document", echo=TRUE)
now()
ymd("2021-02-20")
mdy("November 16th. 22nd")
dmy("sixteenth of November 1970")
dmy("sixteenth November 1970")
dmy("16 November 1970")
as_date(now())
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
head(people, 2)
girls <- data.frame(age = c(14L, 16L, 22L),
name = c("Susan", "Bethany", "Rebecca"),
is_adult = c(FALSE, FALSE, TRUE),
height = c(167.3, 163.6, 168.8))
head(girls, 2)
View(people)
View(people)
View(people)
View(people)
source("~/.active-rstudio-document", echo=TRUE)
View(girls)
girls
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
midyear_sales
yearend_sales_forecast <- midyear_sales *2
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
getwd()
setwd("~/R")
getwd()
install.packages("swirl")
?read.table
load("C:/Users/JL/Desktop/Study/Coursera/Google Data Analytics/8 Google Data Analytics Capstone - Complete a Case Study/cyclastic_workspace.RData")
load("C:/Users/JL/Desktop/Study/Coursera/Google Data Analytics/8 Google Data Analytics Capstone - Complete a Case Study/cyclastic_workspace.RData")
View(bike_summary_df)
bike_summary
View(trips_per_day)
summary(trips_per_day)
summary(trips_per_day$usertype)
trips_per_day$usertype <- as.factor(trips_per_day$day)
summary(trips_per_day$usertype)
summary(trips_per_day)
trips_per_day %>% group_by(usertype) %>% sum()
trips_per_day %>% group_by(usertype) %>% sum(number_of_trips)
trips_per_day %>% summarise(group_by(usertype)) %>% sum(number_of_trips)
trips_per_day <- bike %>%
group_by(usertype) %>%
summarise(avg_trip_duration = mean(tripduration),
median_trip_duration = median(tripduration),
number_of_trips = n())
%>%
trips_per_day <- bike %>%
group_by(day, usertype) %>%
summarise(avg_trip_duration = mean(tripduration),
median_trip_duration = median(tripduration),
number_of_trips = n())
View(trips_per_date)
library(swirl
)
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = .4, col = "red")
4
5
12
abline(h = .05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(nt)
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = "purple", pch = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", purple", pch = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", purple"), pch = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", purple"), pch = 3, cex = 2, lwd = 2)
)
)
{}
}
0
.
))))))))))))
quit()
skip()
mdist(x, r, cx, cy)
mdist(x, y, cx, cy)
which.min(distTmp)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, pch = 8, col = cols1, cex = 2)
points(newCx, newCy, pch = 8, col = cols1, cex = 2, lwd = 2)
skip()
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, x, y, centers = 3)
kmeans(dataFrame, centers = 3)
kmobj$iter
kmObj$iter
plot(x, y, col = kmObj$Cluster. pch = 19, cex = 2)
plot(x, y, col = kmObj$Cluster, pch = 19, cex = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit["addPatt.R"]
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$1v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$d[1] * svd1$u[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a3 <- svd1$u[,1:3] %*% diag(svd1$d[1:3]) %*% t(svd1$v[,1:3])
myImage(svd1$u[,1:3] %*% diag(svd1$d[1:3]) %*% t(svd1$v[,1:3]))
myImage(svd1$u[,1:4] %*% diag(svd1$d[1:4]) %*% t(svd1$v[,1:4]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
ssd[,562:563]
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd$subject == 1)
sub1 <- subset.default(ssd$subject == 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust((hclustering, lab.col = unclass(sub1$activity)))
myplclust((hclustering, lab.col = unclass(sub1$activity)))
skip()
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(concat(sub1[,10:12], maxCon))
mdist <- dist(concatenate(sub1[,10:12], maxCon))
mdist <- dist((sub1[,10:12], maxCon)
mdist <- dist(cbind(sub1[,10:12], maxCon))
mdist <- dist(c(sub1[,c(10:12, maxCon)])
)
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,1:563], 6)
kClust <- kmeans(sub1[,-c(562, 563)], 6)
tables(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[,-c(562, 563)], 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(x$y)
dim(kClust$centers)
laying <- kclust$size == 29
laying <- kClust$size == 29
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19. ylab = "Laying Cluster")
plot(kClust$centers[laying, 1:12], pch = 19. ylab = "Laying Cluster")
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Laying Cluster")
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
haed(pm0)
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0)
)
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.character(dates, "%Y%m%d")
dates <- as.Date(as.character(dates, "%Y%m%d"))
dates <- as.Date(as.character(dates), "%Y%m%d"))
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 31 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.Id == 2008)
pm0sub <- subset(cnt0, county.site == 63.2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE)
)
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mno), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, "state")
dim(mrg)
had(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[,3]))
segments(1, 2, 52, 52
)
segments(rep(1, 52), mrg[,2], rep(2, 52), mrg9,3])
segments(rep(1, 52), mrg[,2], rep(2, 52), mrg[],3])
segments(rep(1, 52), mrg[,2], rep(2, 52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
setwd("C:/Users/JL/Desktop/Study/Coursera/Johns Hopkins Data Science/4 Exploratory Data Analysis/Project_2/Exploratory-Data-Analysis-Project-2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(NEI)
str(NEI)
NEI$year <- as.factor(NEI$year)
str(NEI)
NEI %>% group_by(year) %>% summarise(sum(Emissions))
NEI %>% group_by(year) %>% summarise(Total = sum(Emissions))
NEI %>% group_by(year) %>% summarise(Total = sum(Emissions))
totals <- NEI %>%
group_by(year) %>%
summarise(Total = sum(Emissions))
